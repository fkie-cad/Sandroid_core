name: Lint Code with Ruff

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ruff mypy black isort flake8
        # Install minimal deps needed for type checking only
        pip install pydantic pathlib typing-extensions

    - name: Run Ruff linter
      run: |
        # Run ruff check
        ruff check . --output-format=github

    - name: Run Ruff formatter check
      run: |
        # Check if code is formatted correctly
        ruff format --check .

    - name: Run MyPy type checking
      run: |
        mypy src/sandroid --ignore-missing-imports --no-strict-optional --allow-redefinition || echo "MyPy completed with warnings"

    - name: Check import sorting
      run: |
        ruff check . --select I --output-format=github

  security-lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install "bandit[toml]" safety ruff

    - name: Run Bandit security linter
      run: |
        bandit -r src/ -f json -o bandit-report.json -c pyproject.toml || true
        bandit -r src/ -ll -c pyproject.toml

    - name: Run Safety check
      run: |
        safety check --json --output safety-report.json || true
        safety check

    - name: Run Ruff security rules
      run: |
        ruff check . --select S --output-format=github

    - name: Upload security reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json

  pre-commit:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install pre-commit
      run: |
        python -m pip install --upgrade pip
        pip install pre-commit ruff mypy bandit

    - name: Run pre-commit hooks
      run: |
        # Run hooks individually to avoid dependency issues
        pre-commit run trailing-whitespace --all-files || echo "Trailing whitespace check completed"
        pre-commit run end-of-file-fixer --all-files || echo "End of file fixer completed"
        pre-commit run check-yaml --all-files || echo "YAML check completed"
        pre-commit run ruff --all-files || echo "Ruff check completed"
        pre-commit run ruff-format --all-files || echo "Ruff format completed"
